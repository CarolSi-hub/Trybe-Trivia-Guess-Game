{"ast":null,"code":"import { fetchToken } from '../../../services';\nimport PlayerTypes from './types';\nexport const signIn = player => ({\n  type: PlayerTypes.SIGNIN,\n  payload: player\n});\nexport const includeToken = token => ({\n  type: PlayerTypes.INCLUDE_TOKEN,\n  token\n});\nexport const addScore = (score, assertions) => ({\n  type: PlayerTypes.ADD_SCORE,\n  score,\n  assertions\n});\nexport const resetPlayer = () => ({\n  type: PlayerTypes.RESET_PLAYER\n});\nexport function getToken() {\n  return async dispatch => {\n    const response = await fetchToken();\n    const recevedToken = response.token;\n    dispatch(includeToken(recevedToken));\n    localStorage.setItem('token', recevedToken);\n  };\n}\nexport function setLocalStorage() {\n  const player = this.props.player;\n  const name = player.name,\n        email = player.gravatarEmail,\n        score = player.score,\n        assertions = player.assertions;\n  addScore(score, assertions);\n  const playerToStorage = {\n    player: {\n      name,\n      assertions,\n      score,\n      email\n    }\n  };\n  localStorage.setItem('state', JSON.stringify(playerToStorage));\n}","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-Trivia-Guess-Game/src/store/ducks/player/actions.js"],"names":["fetchToken","PlayerTypes","signIn","player","type","SIGNIN","payload","includeToken","token","INCLUDE_TOKEN","addScore","score","assertions","ADD_SCORE","resetPlayer","RESET_PLAYER","getToken","dispatch","response","recevedToken","localStorage","setItem","setLocalStorage","props","name","email","gravatarEmail","playerToStorage","JSON","stringify"],"mappings":"AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,WAAP,MAAwB,SAAxB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,KAAa;AACjCC,EAAAA,IAAI,EAAEH,WAAW,CAACI,MADe;AAEjCC,EAAAA,OAAO,EAAEH;AAFwB,CAAb,CAAf;AAKP,OAAO,MAAMI,YAAY,GAAIC,KAAD,KAAY;AACtCJ,EAAAA,IAAI,EAAEH,WAAW,CAACQ,aADoB;AAEtCD,EAAAA;AAFsC,CAAZ,CAArB;AAKP,OAAO,MAAME,QAAQ,GAAG,CAACC,KAAD,EAAQC,UAAR,MAAwB;AAC9CR,EAAAA,IAAI,EAAEH,WAAW,CAACY,SAD4B;AAE9CF,EAAAA,KAF8C;AAG9CC,EAAAA;AAH8C,CAAxB,CAAjB;AAMP,OAAO,MAAME,WAAW,GAAG,OAAO;AAChCV,EAAAA,IAAI,EAAEH,WAAW,CAACc;AADc,CAAP,CAApB;AAIP,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMlB,UAAU,EAAjC;AACA,UAAMmB,YAAY,GAAGD,QAAQ,CAACV,KAA9B;AACAS,IAAAA,QAAQ,CAACV,YAAY,CAACY,YAAD,CAAb,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,YAA9B;AACD,GALD;AAMD;AAED,OAAO,SAASG,eAAT,GAA2B;AAAA,QACxBnB,MADwB,GACb,KAAKoB,KADQ,CACxBpB,MADwB;AAAA,QAExBqB,IAFwB,GAE0BrB,MAF1B,CAExBqB,IAFwB;AAAA,QAEHC,KAFG,GAE0BtB,MAF1B,CAElBuB,aAFkB;AAAA,QAEIf,KAFJ,GAE0BR,MAF1B,CAEIQ,KAFJ;AAAA,QAEWC,UAFX,GAE0BT,MAF1B,CAEWS,UAFX;AAGhCF,EAAAA,QAAQ,CAACC,KAAD,EAAQC,UAAR,CAAR;AACA,QAAMe,eAAe,GAAG;AAAExB,IAAAA,MAAM,EAAE;AAAEqB,MAAAA,IAAF;AAAQZ,MAAAA,UAAR;AAAoBD,MAAAA,KAApB;AAA2Bc,MAAAA;AAA3B;AAAV,GAAxB;AACAL,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BO,IAAI,CAACC,SAAL,CAAeF,eAAf,CAA9B;AACD","sourcesContent":["import { fetchToken } from '../../../services';\nimport PlayerTypes from './types';\n\nexport const signIn = (player) => ({\n  type: PlayerTypes.SIGNIN,\n  payload: player,\n});\n\nexport const includeToken = (token) => ({\n  type: PlayerTypes.INCLUDE_TOKEN,\n  token,\n});\n\nexport const addScore = (score, assertions) => ({\n  type: PlayerTypes.ADD_SCORE,\n  score,\n  assertions,\n});\n\nexport const resetPlayer = () => ({\n  type: PlayerTypes.RESET_PLAYER,\n});\n\nexport function getToken() {\n  return async (dispatch) => {\n    const response = await fetchToken();\n    const recevedToken = response.token;\n    dispatch(includeToken(recevedToken));\n    localStorage.setItem('token', recevedToken);\n  };\n}\n\nexport function setLocalStorage() {\n  const { player } = this.props;\n  const { name, gravatarEmail: email, score, assertions } = player;\n  addScore(score, assertions);\n  const playerToStorage = { player: { name, assertions, score, email } };\n  localStorage.setItem('state', JSON.stringify(playerToStorage));\n}\n"]},"metadata":{},"sourceType":"module"}