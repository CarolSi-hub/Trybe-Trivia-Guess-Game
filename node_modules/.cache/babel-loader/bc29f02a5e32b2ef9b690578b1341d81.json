{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-Trivia-Guess-Game/src/components/FeedbackScore/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PlayerActions from '../../store/ducks/player/actions';\nimport './FeedbackScore.css';\n\nclass FeedBackScore extends Component {\n  componentDidMount() {\n    const rankingProps = this.props.rankingProps;\n    localStorage.setItem('ranking', JSON.stringify(rankingProps));\n  }\n\n  componentWillUnmount() {\n    const resetPlayerAction = this.props.resetPlayerAction;\n    resetPlayerAction();\n  }\n\n  render() {\n    const _this$props = this.props,\n          assertionsProps = _this$props.assertionsProps,\n          scoreProps = _this$props.scoreProps;\n    const threeAssertions = 3;\n    return React.createElement(\"div\", {\n      className: \"feedback-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"ranking-button\",\n      \"data-testid\": \"btn-ranking\",\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Ver Ranking\"), React.createElement(\"h1\", {\n      className: assertionsProps >= threeAssertions ? 'good' : 'bad',\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, assertionsProps >= threeAssertions ? 'Mandou bem!' : 'Podia ser melhor...'), React.createElement(\"div\", {\n      className: \"score-and-assertions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"score-and-assertions-indication\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Pontua\\xE7\\xE3o: \"), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, scoreProps)), React.createElement(\"div\", {\n      className: \"score-and-assertions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"score-and-assertions-indication\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Acertos: \"), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, assertionsProps)), React.createElement(Link, {\n      className: \"jogar-novamente-button\",\n      \"data-testid\": \"btn-play-again\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Jogar Novamente\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  scoreProps: state.player.score,\n  assertionsProps: state.player.assertions,\n  rankingProps: state.ranking\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetPlayerAction: () => dispatch(PlayerActions.resetPlayer())\n});\n\nFeedBackScore.propTypes = {\n  assertionsProps: PropTypes.number.isRequired,\n  scoreProps: PropTypes.number.isRequired,\n  resetPlayerAction: PropTypes.func.isRequired,\n  rankingProps: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedBackScore);","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-Trivia-Guess-Game/src/components/FeedbackScore/index.js"],"names":["React","Component","PropTypes","Link","connect","PlayerActions","FeedBackScore","componentDidMount","rankingProps","props","localStorage","setItem","JSON","stringify","componentWillUnmount","resetPlayerAction","render","assertionsProps","scoreProps","threeAssertions","mapStateToProps","state","player","score","assertions","ranking","mapDispatchToProps","dispatch","resetPlayer","propTypes","number","isRequired","func","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PlayerActions from '../../store/ducks/player/actions';\n\nimport './FeedbackScore.css';\n\nclass FeedBackScore extends Component {\n  componentDidMount() {\n    const { rankingProps } = this.props;\n    localStorage.setItem('ranking', JSON.stringify(rankingProps));\n  }\n\n  componentWillUnmount() {\n    const { resetPlayerAction } = this.props;\n    resetPlayerAction();\n  }\n\n  render() {\n    const { assertionsProps, scoreProps } = this.props;\n    const threeAssertions = 3;\n    return (\n      <div className=\"feedback-display\">\n        <Link\n          className=\"ranking-button\"\n          data-testid=\"btn-ranking\"\n          to=\"/ranking\"\n        >\n          Ver Ranking\n        </Link>\n        <h1\n          className={ assertionsProps >= threeAssertions\n            ? 'good'\n            : 'bad' }\n          data-testid=\"feedback-text\"\n        >\n          { assertionsProps >= threeAssertions\n            ? 'Mandou bem!'\n            : 'Podia ser melhor...'}\n        </h1>\n        <div className=\"score-and-assertions\">\n          <p className=\"score-and-assertions-indication\">Pontuação: </p>\n          <p data-testid=\"feedback-total-score\">\n            {scoreProps}\n          </p>\n        </div>\n        <div className=\"score-and-assertions\">\n          <p className=\"score-and-assertions-indication\"> Acertos: </p>\n          <p data-testid=\"feedback-total-question\">\n            {assertionsProps}\n          </p>\n        </div>\n        <Link\n          className=\"jogar-novamente-button\"\n          data-testid=\"btn-play-again\"\n          to=\"/\"\n        >\n          Jogar Novamente\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  scoreProps: state.player.score,\n  assertionsProps: state.player.assertions,\n  rankingProps: state.ranking,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetPlayerAction: (() => dispatch(PlayerActions.resetPlayer())),\n});\n\nFeedBackScore.propTypes = {\n  assertionsProps: PropTypes.number.isRequired,\n  scoreProps: PropTypes.number.isRequired,\n  resetPlayerAction: PropTypes.func.isRequired,\n  rankingProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedBackScore);\n"]},"metadata":{},"sourceType":"module"}