{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-Trivia-Guess-Game/src/components/Ranking/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PlayerActions from '../../store/ducks/player/actions';\nimport './RankingComponent.css';\n\nclass RankingComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      orderedRankig: []\n    };\n    this.orderRankig = this.orderRankig.bind(this);\n  }\n\n  componentDidMount() {\n    this.orderRankig();\n  }\n\n  componentWillUnmount() {\n    const resetPlayerAction = this.props.resetPlayerAction;\n    resetPlayerAction();\n  }\n\n  orderRankig() {\n    const rankingProps = this.props.rankingProps;\n    const orderRankig = rankingProps.sort((player1, player2) => player2.score - player1.score);\n    this.setState({\n      orderedRankig: orderRankig\n    });\n  }\n\n  render() {\n    const orderedRankig = this.state.orderedRankig;\n    return React.createElement(\"div\", {\n      className: \"ranking-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ranking-title\",\n      \"data-testid\": \"ranking-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Ranking\"), orderedRankig.map((player, index) => React.createElement(\"div\", {\n      key: player.name,\n      className: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"playet-item\",\n      \"data-testid\": `player-name-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, player.name), React.createElement(\"span\", {\n      className: \"playet-item\",\n      \"data-testid\": `player-score-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, player.score), React.createElement(\"img\", {\n      className: \"playet-item\",\n      src: `${player.picture}`,\n      alt: `${player.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/\",\n      \"data-testid\": \"btn-go-home\",\n      type: \"button\",\n      className: \"jogar-novamente-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Jogar Novamente\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  rankingProps: state.ranking\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetPlayerAction: () => dispatch(PlayerActions.resetPlayer())\n});\n\nRankingComponent.propTypes = {\n  rankingProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n  resetPlayerAction: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RankingComponent);","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-Trivia-Guess-Game/src/components/Ranking/index.js"],"names":["React","Component","PropTypes","Link","connect","PlayerActions","RankingComponent","constructor","state","orderedRankig","orderRankig","bind","componentDidMount","componentWillUnmount","resetPlayerAction","props","rankingProps","sort","player1","player2","score","setState","render","map","player","index","name","picture","mapStateToProps","ranking","mapDispatchToProps","dispatch","resetPlayer","propTypes","arrayOf","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PlayerActions from '../../store/ducks/player/actions';\nimport './RankingComponent.css';\n\nclass RankingComponent extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      orderedRankig: [],\n    };\n\n    this.orderRankig = this.orderRankig.bind(this);\n  }\n\n  componentDidMount() {\n    this.orderRankig();\n  }\n\n  componentWillUnmount() {\n    const { resetPlayerAction } = this.props;\n    resetPlayerAction();\n  }\n\n  orderRankig() {\n    const { rankingProps } = this.props;\n    const orderRankig = rankingProps.sort(\n      (player1, player2) => player2.score - player1.score,\n    );\n    this.setState({ orderedRankig: orderRankig });\n  }\n\n  render() {\n    const { orderedRankig } = this.state;\n    return (\n      <div className=\"ranking-display\">\n        <h1\n          className=\"ranking-title\"\n          data-testid=\"ranking-title\"\n        >\n          Ranking\n        </h1>\n        { orderedRankig.map((player, index) => (\n          <div key={ player.name } className=\"player\">\n            <p\n              className=\"playet-item\"\n              data-testid={ `player-name-${index}` }\n            >\n              { player.name }\n            </p>\n            <span\n              className=\"playet-item\"\n              data-testid={ `player-score-${index}` }\n            >\n              {player.score}\n            </span>\n            <img\n              className=\"playet-item\"\n              src={ `${player.picture}` }\n              alt={ `${player.name}` }\n            />\n          </div>\n        ))}\n        <Link\n          to=\"/\"\n          data-testid=\"btn-go-home\"\n          type=\"button\"\n          className=\"jogar-novamente-button\"\n        >\n          Jogar Novamente\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  rankingProps: state.ranking,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetPlayerAction: (() => dispatch(PlayerActions.resetPlayer())),\n});\n\nRankingComponent.propTypes = {\n  rankingProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n  resetPlayerAction: PropTypes.func.isRequired,\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RankingComponent);\n"]},"metadata":{},"sourceType":"module"}